1. alias 명령어

자주 수행하는 명령어들을 쉽게 사용할 수 있도록 설정하는 명령어

예제 : pwd 명령어를 p로 놓고 사용하기

# alias p='pwd'

# p

하면 실행된다

다른 alias를 만든다면?

혹여 다른 alias를 새로 만들더라도,

한 번 만들어둔 alias는 다시 사용할 수 있다.


# alias 목록 확인하기

그냥 alias를 입력하고 엔터를 누르면 목록이 쫙 나온다.

기존에 자동으로 생성되있는 alias 들이 있고, 방금 만든 p와 l도 확인할 수 있다.

# alias 삭제하기

unalias 'alias 이름'


2. 파일 연동해서 끌어오기

장치 - 클립 보드 공유 - 양방향

장치 - 드래그 앤 드롭 - 양방향 으로 설정한다.

그 이후 재부팅하면,

윈도우의 폴더에 있는 파일을 끌어서 VirutalBox 안으로 가지고 올 수 있다.

위 방법으로 test51 디렉토리에 emp.txt와 dept.txt 파일을 넣었다.


3. cat '파일 이름' -> 파일 읽어오기

# cat emp.txt

4. more 명령어

조금씩 파일을 읽는 명령어

more '파일명' -> 파일 읽어오기

나는 jobs의 연설문 txt 파일(첫 디렉토리에 옮겨둔 상태)을 읽어왔다.

more jobs.txt

전체의 n%만 출력되는데,

여기서 엔터 또는 스페이스 바를 누르면 한 줄씩 추가로 출력되면서

more의 %가 점점 늘어난다.

멈추고 싶다면 q를 누르면 탈출할 수 있다.


5. redirection 명령어

화면에 출력되는 결과를 파일로 저장하는 명령어

>> : 없으면 파일을 생성하고, 있으면 기존 파일 뒤에 덧붙이겠다.

>   : 파일을 생성하겠다. 기존에 파일이 있으면 그냥 덮어쓰겠다.

예제 : emp.txt 파일을 복사해서 emp2.txt 파일 만들기

cat emp.txt>>emp2.txt

꼭 이렇게 txt 파일만 txt 파일로 만들 수 있는건 아니다.

ls -l>>list.txt

이렇게 디렉토리의 정보를 표시하는

ls -l 명령어의 결과 자체를

list.txt 라는 파일 안에 저장할 수도 있다.



6. head 명령어

문서의 처음 몇줄만 화면에 출력하는 명령어

head '출력줄 수' '파일명'

예제 : 잡스 연설문의 5줄만 출력하기

head -5 jobs.txt

예제 : 10줄만 따로 jobs_10.txt에 저장하기

head -10 jobs.txt>>jobs_10.txt


7. wc 명령어

파일 안의 단어의 개수 또는 라인 수를 출력하는 명령어

wc -l '파일명'

ex) wc -l jobs.txt

-l : 라인 수

-w : 단어 수

-c : 철자의 개수

예제 : root 안의 txt파일만 조회하고, 그 중 list.txt의 라인 수를 출력하기

ls -l *.txt

wc -l list.txt

list.txt 파일에 22개의 라인이 있는 것을 확인할 수 있다.



8. pipe 명령어

앞의 명령어 | 뒤의 명령어

앞의 명령어의 출력을 뒤의 명령어의 입력으로 보냄으로써

명령어의 실행 결과를 다음 명령어로 전달하는 기능

txt 파일이 몇 개 있는지 출력 결과의 라인 수를 출력하기

ls -l *.txt | wc -l

( txt 리스트를 뽑고 | 줄의 수를 출력해라 )


# 디렉토리 목록을 확인하는 명령어

ls -ld */

pipe 명령어와 조합

ls -ld */ | wc -l

디렉토리가 14개 있다는 것을 확인.


9. grep 명령어

파일 안에 포함된 특정 단어나 구문을 검색하는 명령어

# grep '찾고 싶은 단어' '파일명'

ex) grep 'SCOTT' emp.txt

보면 SCOTT이 있는 구문과 SCOTT이 빨갛게 표시된 것을 확인할 수 있다.


# grep -i

-i 옵션은 대소문자를 구분하지 않겠다는 의미다.

grep -i 'scott' emp.txt


예제 : (1) 직업이 SALESMAN인 경우를 모두 출력하고 (2) 몇 명인지도 출력하기

grep 'SALESMAN' emp.txt

grep 'SALESMAN' emp.txt | wc -l

10. awk 명령어

열을 선택하는 명령어

열과 열은 공백으로 구분되어 있다.

예제 : emp.txt에서 두번째, 여섯번째 행만 출력하기

cat emp.txt | awk '{print $2, $6}'







$2는 emp.txt에서 두번째 열이고, $6은 여섯번째 열이다.



예제 : 직업이 ANALYST인 사원들의 이름과 월급과 부서번호를 출력하기



grep -i 'analyst' emp.txt | awk '{print $2, $6, $8}'