jobs 명령어

- 동작중인 작업의 상태를 확인하는 명령어


* 상태 정보 4가지

1. running : 실행중

2. stopped : 일시중단됨

3. Done : 완료

4. terminated : 강제 종료됨

vi hhh.txt

select ename, sal, job, deptno

 from emp

 where

까지 작성한 뒤

esc, 컨트롤+z 를 눌러 빠져나오기

[1] -> job 번호

stopped -> 멈췄다

이렇게 바로 표시되지만,

jobs 명령어를 실행하면 또 확인할 수 있다.

여기서

fg 명령어를 입력하면,

내가 일시정지했던 화면으로 돌아갈 수 있다.


이렇게 입력을 완료하면,

jobs를 입력해도 아무것도 나타나지 않는다.

만약 일시정지해둔 작업이 여러개라면,

fg 뒤에 작업 번호를 입력하면 된다.

예를 들어, fg 2를 입력하면 두 번째 작업으로 돌아간다.

디폴트 값은 1이었던 셈이다.


# ps 명령어

- 현재 시스템에서 수행되고 있는 프로세서의 정보를 표시하는 명령어

ps [옵션] [프로세서 번호]

옵션

-p : 프로세서 아이디

-e : 현재 실행중인 모든 프로세서

-f : 실제 유저명, 개시 시간 등을 표시

-ef : e+f 동시에

-l : 프로세서의 상태

ps -ef

이런 식으로 실행 중인 프로세서의 정보들이 나오는데,

이 중에서 만약 scott 유저의 프로세서만 보고싶다면

ps -ef | grep scott

해주면 된다.

같은 방식으로, vi 편집기 작업중이었던 프로세서만 조회하려면

ps -ef | grep vim

해주면 된다.

 

# kill 명령어

- 프로세서를 죽이는 명령어

kill [옵션] [프로세서 번호]

kill -9 : 강제 종료

kill -15 : 작업 종료


# top 명령어

- 현재 작동중인 프로세서들의 cpu 사용률과 메모리 사용률을 확인하는 명령어

내가 돌리고 있는 프로그램이 cpu를 얼마나 많이 사용하고 있는지 또는

리눅스 자원을 많이 사용하고 있는지 확인해 볼 수 있다.

마치 인터넷하다가 렉 걸릴 때 작업 관리자를 보는 느낌


top 입력

그럼 실시간으로 정보들이 계속 변하면서 표시된다.

여기서 주목할 부분은 단연 %cpu와 %mem 이다.

여기서 cpu 또는 mem이 비정상적으로 높다면

무슨 작업인지 확인해보고, kill을 고려해보자

여기서 주목할 부분은 단연 %cpu와 %mem 이다.

여기서 cpu 또는 mem이 비정상적으로 높다면

무슨 작업인지 확인해보고, kill을 고려해보자